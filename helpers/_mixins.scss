@import 'variables';

@mixin button(
	$background-color: black,
	$font-weight: 300,
	$color: white,
	$hover-mix-color: white,
	$hover-mix-percent: 15%,
	$border-radius: 4px
) {
	@include clickable();
	@include hover($background-color, $hover-mix-color);
	background-color: $background-color;
	border: 0;
	border-radius: $border-radius;
	color: $color;
	font-weight: $font-weight;
	font-size: $base-font-size;
	font-family: $base-font-family;
	padding: 0;
	&:disabled {
		cursor: default;
		&:hover {
			background-color: $background-color;
		}
	}
}

@mixin spinner($color: white) {
	mat-spinner {
		::ng-deep circle {
			stroke: $color;
		}
	}
}

@mixin clickable {
	cursor: pointer;
	user-select: none;
}

@mixin divider($background: $upscale-grey7) {
	display: block;
	width: 100%;
	height: 1px;
	background-color: $background;
}

@mixin hover($backgroundColor, $hoverMixColor: #000000) {
	&:hover {
		@if $backgroundColor == #ffffff {
			background-color: darken($backgroundColor, 10%);
		} @else {
			/*
			 * Had a discussion with Jeremy Laverdiere that the hover colors are actually tricky
			 * and it might be necessary to do specific hover colors. For now make your best judgment call as to whether the hover
			 * color looks acceptable and add the specific case if needed.
			 */
			background-color: mix($hoverMixColor, $backgroundColor, 10%);
		}
	}
}

@mixin truncate-text-with-ellipsis {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

/**
 * NOTE: $lineHeight should always be in relative em format, i.e. 1.5 or 1.33. Not px.
 */
@mixin multiline-truncate-text-with-ellipsis($fontSize: 14px, $lineHeight: 18px / 14px, $lineCount: 2) {
	font-size: $fontSize;
	line-height: $lineHeight;
	max-height: $lineHeight * $fontSize * $lineCount;
	overflow: hidden;
	display: -webkit-box;
	-webkit-line-clamp: $lineCount;
	-webkit-box-orient: vertical;
}

@mixin multiline-truncate-swatch-with-ellipsis($fontSize: 14px, $lineHeight: 18px / 14px, $lineCount: 2) {
	font-size: $fontSize;
	line-height: $lineHeight;
	max-height: $lineHeight * $fontSize * $lineCount;
	overflow: hidden;
}

@mixin flex-columns($columns, $gutter) {
	width: calc(#{100% / $columns} - #{$gutter * ($columns - 1) / $columns});
	margin-right: $gutter;

	&:nth-child(#{$columns}n) {
		margin-right: 0;
	}
}

// calculate responsive font size
@mixin minmax-font-size($minFontSize, $maxFontSize) {
	font-size: calc(#{$minFontSize}px + (#{$maxFontSize} - #{$minFontSize}) * ((100vw - 600px) / (1600 - 600)));
}

// calculate responsive line height
@mixin minmax-line-height($minLineHeight, $maxLineHeight) {
	line-height: calc(#{$minLineHeight}em + (#{$maxLineHeight} - #{$minLineHeight}) * ((100vw - 600px) / (1600 - 600)));
}

@mixin extra-large-font-size {
	@include font-size(46);
	line-height: 1.22;
	font-weight: 700;

	@media screen and (max-width: 56.25em) {
		@include font-size(36);
		line-height: 1.22;
	}
}

@mixin large-font-size {
	@include font-size(36);
	line-height: 1.22;
	font-weight: 700;

	@media screen and (max-width: 56.25em) {
		@include font-size(26);
		line-height: 1.38;
	}
}

@mixin medium-font-size {
	@include font-size(18);
	line-height: 1.55;
	font-weight: 500;

	@media screen and (max-width: 37.5em) {
		@include font-size(16);
		line-height: 1.5;
	}
}

@mixin base-font-size {
	@include font-size(16);
	line-height: 1.5;
	font-weight: 400;
}

@mixin small-font-size {
	@include font-size(14);
	line-height: 1.57;
	font-weight: 300;
}

@mixin extra-small-font-size {
	@include font-size(12);
	line-height: 1.66;
	font-weight: 300;
}

@mixin article-body-font-size {
	@include font-size(22);
	line-height: 1.9;
	font-weight: 300;

	@media screen and (max-width: 56.25em) {
		@include font-size(18);
		line-height: 1.77;
	}
}

@mixin article-subheadline-font-size {
	@include font-size(18);
	line-height: 1.66;
	font-weight: 300;
	font-style: italic;
}

@mixin header-defaults {
	h1 {
		@include font-size(26);
		font-weight: bold;
		line-height: 1.38;
	}

	h2 {
		@include font-size(18);
		font-weight: bold;
		line-height: 1.55;
	}

	h3 {
		@include font-size(18);
		line-height: 1.55;
	}

	h4 {
		@include font-size(16);
		font-weight: bold;
		line-height: 1.5;
	}
}

@mixin font-size($fontSize) {
	font-size: #{stripUnit($fontSize)}px;
	font-size: rem($fontSize);
}

@function stripUnit($value) {
	@return $value / ($value * 0 + 1);
}
@function rem($pxValue) {
	@return #{stripUnit($pxValue) / 10}rem;
}
